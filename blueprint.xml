<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
	xmlns:cxf-core="http://cxf.apache.org/blueprint/core"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
	xsi:schemaLocation="
             http://www.osgi.org/xmlns/blueprint/v1.0.0
             http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://camel.apache.org/schema/blueprint/cxf 
             http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
             http://camel.apache.org/schema/blueprint 
             http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">


	<bean id="authorizationInterceptor"
        class="org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor">
        <property name="methodRolesMap">
		    <map>
		        <entry key="doSomething" value="admin"/>
		        <entry key="doSomethingGet" value="admin"/>
		        <entry key="doSomethingPost" value="admin"/>
		        <entry key="doSomethingPut" value="admin"/>
		    </map>
		</property>
    </bean>
	
	
	<cxf:rsServer id="serviceRS" address="/fuse/sample/serviceRS"
		serviceClass="com.redhat.fuse.sample.rest.service.ServiceRS"
		loggingFeatureEnabled="false">
		<cxf:providers>
			<ref component-id="jsonProvider" />
			<ref component-id="authenticationFilter" />
			<ref component-id="authorizationFilter" />
		</cxf:providers>
	</cxf:rsServer>
	
	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
		<property name="dropRootElement" value="true" />
		<property name="supportUnwrapped" value="true" />
		<property name="ignoreNamespaces" value="true" />
	</bean>
	
	<bean id="authenticationFilter" class="org.apache.cxf.jaxrs.security.JAASAuthenticationFilter">
        <!-- Name of the JAAS Context -->
        <property name="contextName" value="karaf"/>
    </bean>
    
    <bean id="authorizationFilter" class="org.apache.cxf.jaxrs.security.SimpleAuthorizingFilter">
	    <property name="interceptor" ref="authorizationInterceptor"/>
	</bean>

	<cxf:cxfEndpoint id="serviceWS"
                     serviceClass="com.redhat.fuse.sample.rest.service.ServiceWS"
                     address="/fuse/sample/serviceWS"
                     >
		<cxf:properties>
			<entry key="dataFormat" value="POJO" />
			<entry key="faultStackTraceEnabled" value="true" />
			<entry key="loggingFeatureEnabled" value="false" />
			<entry key="ws-security.validate.token" value="false"/>
		</cxf:properties>
		<cxf:inInterceptors>
			<ref component-id="wss4jInInterceptor"/>
			<ref component-id="authenticationInterceptor"/>
			<ref component-id="authorizationInterceptor"/>
		</cxf:inInterceptors>
	</cxf:cxfEndpoint>
	
	
	<bean id="wss4jInInterceptor"
        class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
        <property name="properties">
		    <map>
		        <entry key="action" value="UsernameToken"/>
		        <entry key="passwordType" value="PasswordText"/>
		    </map>
		</property>
    </bean>
    
    <bean id="authenticationInterceptor" class="org.apache.cxf.interceptor.security.JAASLoginInterceptor">
        <property name="contextName" value="karaf"/>
        <property name="roleClassifier" value="RolePrincipal"/>
		<property name="roleClassifierType" value="classname"/>
    </bean>
    
    
	<bean id="processor" class="com.redhat.fuse.sample.rest.processor.Processor">
	</bean>
	

	<camelContext xmlns="http://camel.apache.org/schema/blueprint">
  <route id="serviceRS">
    <from uri="cxfrs:bean:serviceRS"/>
    <choice>
      <when>
        <simple>
			        	${header.operationName} == 'doSomethingPost' ||
			        	${header.operationName} == 'doSomethingPut'
        			</simple>
        <to uri="direct:doSomething"/>
      </when>
      <when>
        <simple>
			        	${header.operationName} == 'doSomethingGet'
        			</simple>
        <to uri="direct:getSomething"/>
      </when>
    </choice>
  </route>
  <route id="serviceWS">
    <from uri="cxf:bean:serviceWS"/>
    <choice>
      <when>
        <simple>
			        	${header.operationName} == 'doSomething'
        			</simple>
        <to uri="direct:doSomething"/>
      </when>
    </choice>
  </route>
  <route id="doSomething">
    <from uri="direct:doSomething"/>
    <convertBodyTo type="com.redhat.fuse.sample.rest.model.DataInput"/>
    <log message="receive '${header.operationName}' request ${body}"/>
    <bean ref="processor" method="doSomething" beanType="com.redhat.fuse.sample.rest.processor.Processor"/>
    <log message="send '${header.operationName}' response ${body}"/>
  </route>
  <route id="getSomething">
    <from uri="direct:getSomething"/>
    <log message="receive '${header.operationName}' request ${body}"/>
    <bean ref="processor" method="getSomething" beanType="com.redhat.fuse.sample.rest.processor.Processor"/>
    <log message="send '${header.operationName}' response ${body}"/>
  </route>
</camelContext>

</blueprint>
