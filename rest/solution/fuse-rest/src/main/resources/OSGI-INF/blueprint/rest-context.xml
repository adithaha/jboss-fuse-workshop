<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    
    
      <!-- to setup camel servlet with OSGi HttpService -->
	  <reference id="httpService" interface="org.osgi.service.http.HttpService"/>
	
	  <bean class="org.apache.camel.component.servlet.osgi.OsgiServletRegisterer"
	        init-method="register"
	        destroy-method="unregister">
	    <property name="alias" value="/rest/employee"/>
	    <property name="httpService" ref="httpService"/>
	    <property name="servlet" ref="camelServlet"/>
	  </bean>
	
	  <bean id="camelServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet"/>
    
    
    <camelContext id="employee"
        trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <restConfiguration apiContextListing="true"
            apiContextPath="api-docs" bindingMode="json"
            component="servlet" contextPath="employeeRS" enableCORS="true">
            <!-- we want json output in pretty mode -->
            <dataFormatProperty key="prettyPrint" value="true"/>
            <!-- setup swagger api descriptions -->
            <apiProperty key="base.path" value="rest"/>
            <apiProperty key="api.version" value="1.2.3"/>
            <apiProperty key="api.title" value="User Services"/>
            <apiProperty key="api.description" value="Camel Rest Example with Swagger that provides an User REST service"/>
            <apiProperty key="api.contact.name" value="The Apache Camel team"/>
        </restConfiguration>
        <rest consumes="application/json" path="" produces="application/json">
            <description>Employee rest service</description>
            <!-- this is a rest GET to view an user by the given id -->
            <get
                outType="org.jboss.fuse.workshop.rest.employee.Employee" uri="/{id}">
                <description>Find employee by id</description>
                <param dataType="integer"
                    description="The id of the employee to get"
                    name="id" type="path"/>
                <to uri="direct:getEmployee"/>
            </get>
            <!-- this is a rest PUT to create/update an user -->
            <put type="org.jboss.fuse.workshop.rest.employee.Employee">
                <description>Updates or create a employee</description>
                <param description="The employee to update or create"
                    name="body" type="body"/>
                <to uri="direct:putEmployee"/>
            </put>
            <!-- this is a rest GET to find all users -->
            <get
                outType="org.jboss.fuse.workshop.rest.employee.Employee[]" uri="/findAll">
                <description>Find all employees</description>
                <to uri="direct:getEmployeeFindAll"/>
            </get>
        </rest>
        <route id="_route1">
            <from id="_from1" uri="direct:getEmployee"/>
            <log id="_log1" message="receive request"/>
            <to id="_to1" uri="sql:select * from employee where id = :#${header.id}?dataSource=dsFis2&amp;outputType=SelectOne&amp;outputClass=org.jboss.fuse.workshop.rest.employee.Employee"/>
        </route>
    </camelContext>
</blueprint>
